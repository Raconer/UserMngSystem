services:
  mysql:
    image: mysql:8.0.42
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root   # root 계정 비밀번호
      MYSQL_DATABASE: user_mng    # 초기 생성할 DB 이름
    ports:
      - "3306:3306"
    networks:
      - backend
    volumes:
      - ./insert_users_final.sql:/docker-entrypoint-initdb.d/insert_users_final.sql   # 초기 데이터 삽입용 SQL 파일 마운트 (컨테이너 시작 시 자동 실행됨)
    tmpfs:
      - /var/lib/mysql
    healthcheck:                # MySQL 정상 작동 여부 확인용 설정
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-uroot", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  auth:
    build:
      context: ./auth
    container_name: auth
    depends_on:
      mysql:
        condition: service_healthy  # MySQL이 정상 동작할 때만 시작
    ports:
      - "8080:8080"
    networks:
      - backend

  kakao:
    build:
      context: ./kakao
    container_name: kakao
    ports:
      - "8081:8081"
    networks:
      - backend

  sms:
    build:
      context: ./sms
    container_name: sms
    ports:
      - "8082:8082"
    networks:
      - backend

networks:
  backend:  # 서비스 간 통신을 위한 가상 네트워크 정의